# This file is part of sp-rtrace package.
#
# Copyright (C) 2010 by Nokia Corporation
#
# Contact: Eero Tamminen <eero.tamminen@nokia.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA

# This is a sample configuration file to demonstrate the configuration
# sections recognized by the module-template template.
# It compiles into simple module that traces close, fopen, fclose 
# calls.

[module]
version = <version in format major.minor>
name = <short module name, single word>
description = <long module description>

[resource]
name = <short resource name, single word>
description = <long resource description>
flags = <resource flags. Use refcount for reference counted resources>


[function]
# The following built-in functracer functions can be used to access 
# function arguments:
#   fn_argument(proc, <number>)  - read the argument <number> as integer value.
#   trace_mem_readw(proc, <address>) - read the address contents as integer value.
#                                      Used to read pointer values.
#
# The following built-in macros can be used to write argument values:
#   ARG_INT(<argument name>, <index>) - write formatted integer argument
#   ARG_STR(<argument name>, <index>) - write formatted string argument
# Where:
#   <argument name>  - the argument name (description).
#   <index>          - the argument index in function argument list. 
#
symbol_name = <the function symbol name>
report_name = <the name to report>
resource = <the allocated/freed resource. Must match the name of one of the resources>
res_size = <the resource size expression>
res_id = <the resource identifier expression>
fail = <the allocation failure expression. optional>
args[] = <the argument description. optional>
